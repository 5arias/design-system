@import '../utils/mixins';
@import '../utils/variables';

/*
Buttons

Use buttons to signal actions.

**Accessibility**
- Buttons should display a visible focus state when users tab to them.
- Avoid using `<div>` or `<img>` tags to create buttons. Screen readers don't automatically know either is a usable button.
- When styling links to look like buttons, remember that screen readers handle links slightly differently than they do buttons. Pressing the Space key triggers a button, but pressing the Enter key triggers a link.

Style guide: Components.buttons
*/

/*
CSS API

Markup:
<a href="#" class="hc-btn {{modifier_class}}">Link text</a>
<button type="button" class="hc-btn {{modifier_class}}" {{:modifier}}>Button label</button>

.hc-btn--primary - The primary call-to-action

Style guide: Components.buttons.css
*/

.hc-btn {
  background-color: var(--white);
  border: 1px solid var(--blue);
  border-radius: var(--border-radius);
  color: var(--blue);
  cursor: pointer;
  font-family: var(--body-font);
  font-size: var(--font-size-base);
  font-weight: bold;
  line-height: var(--line-height-base);
  padding: 5px 10px;
  text-decoration: none;

  &:active,
  &:focus,
  &:hover {
    background-color: color(var(--blue) blackness(+ var(--darken-percent)));
    border-color: color(var(--blue) blackness(+ var(--darken-percent)));
    color: var(--white);
  }

  &:focus {
    @apply --accessible-outline;
  }

  @nest a& {
    display: inline-block;
  }
}

.hc-btn--primary {
  background-color: var(--blue);
  color: var(--white);
}
